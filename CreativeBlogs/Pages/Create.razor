@page "/Create"
@attribute [Authorize]
@using CreativeBlogs.Components
@using CreativeBlogs.Models
@inject AuthenticationStateProvider authProvider
@inject ITagsData tagData
@inject IBlogPostData blogpostData
@inject IUserData userData
@inject NavigationManager navManager

<div>
    
    <div>
        
            <div class="row">
                <div id="content" class="col-md-12">
                 @if (tags is not null)
                {
                    
                }
                <EditForm Model="blogpost" OnValidSubmit="CreateBlogPost" class="row">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="d-flex flex-column my-3 align-items-center col-md-12">
                        <label for="blogpost-text" class=""><h2>Title</h2></label>
                        <InputText class="w-75" id="blogpost-text" @bind-Value="blogpost.Title"/>
                    </div>

                    <div class="d-flex flex-column my-3 align-items-center col-md-12">
                        <label for="description" class="fw-bold fs-5"><h2>Description</h2></label>
                        <InputTextArea id="description" class="p-3 lh-lg w-100 roboto-font" rows="25" @bind-Value="blogpost.Description"/>
                    </div>
                    <div class="container-tags col-md-12">
                        <MyInputRadioGroup id="tag" @bind-Value="blogpost.TagId">
                            @if (tags is not null)
                            {
                                @foreach (var t in tags)
                                {

                                    if (t.TagName != "All")
                                    {
                                        <div tabindex="0" class="mx-1 radio-item-group mb-2">
                                            <InputRadio Value="@t.Id" id="@t.Id" />
                                            <label for="@t.Id" title="@t.TagDescription" class="text-center ">@t.TagName</label>
                                        </div>
                                    }

                                }
                            }
                            
                        </MyInputRadioGroup>
                    </div>
                   
                    <div class="mx-auto mt-2 d-grid gap-2 d-md-flex justify-content-md-end flex-nowrap btn group col-md-12">
                        <button class="btn btn-dark mx-2 my-2" @onclick="ClosePage">Cancel</button>
                        <button class="btn btn-light mx-2 my-2" type="submit">Publish</button>
                        
                    </div>
                </EditForm>
                </div>
            </div>
        
    </div>
    
    
</div>

@code {
    private CreateBlogPostModel blogpost = new();
    private List<TagModel> tags;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        tags = await tagData.GetAllTags();
       
        
        loggedInUser = await authProvider.GetUserFromAuth(userData);
    }

  

    private async Task CreateBlogPost() 
    {
        BlogPostModel b = new();
        b.Title = blogpost.Title;
        b.Description = blogpost.Description;
        b.Author = new BasicUserModel(loggedInUser);
        b.Tag = tags.Where(t => t.Id == blogpost.TagId).FirstOrDefault();

        if (b.Tag is null)
        {
            blogpost.TagId = "";
            return;
        }

        await blogpostData.CreateBlogPost(b);
        blogpost = new();
        ClosePage();
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

}
